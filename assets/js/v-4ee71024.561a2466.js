"use strict";(self.webpackChunkblogs_express=self.webpackChunkblogs_express||[]).push([[3320],{3334:(s,n,e)=>{e.r(n),e.d(n,{default:()=>p});const a=(0,e(273).uE)('<h1>vue-cli env 配置</h1><h2 id="前言" tabindex="-1"><a class="header-anchor" href="#前言" aria-hidden="true">#</a> 前言</h2><p>相信使用过 vueCli 开发项目的小伙伴有点郁闷，正常开发时会有三个接口环境（开发，测试，正式），但是 vueCli 只提供了两种 development,production(不包含 test-单测)模式。其实这是小伙伴们没有理解 vueCli 文档所导致的。</p><p>vueCli 命令中 <code>--mode</code> 对应的 <code>.env.[mode]</code>，而不是 <code>NODE_ENV</code></p><div class="custom-container tip"><p class="custom-container-title">注意</p><p>除了 VUE_APP_ 变量之外。<br> 还有两个特殊的变量：<br> NODE_ENV： 是 <code>development</code>、<code>production</code>、<code>test</code> 中的一个。其值取决于应用运行的模式。<br> BASE_URL： 和 vue.config.js 中的 <code>publicPath</code> 选项相符，即你的应用会部署到的基础路径。</p></div><h2 id="简介-官方" tabindex="-1"><a class="header-anchor" href="#简介-官方" aria-hidden="true">#</a> 简介-官方</h2><p>mode 是 Vue CLI 项目中一个重要的概念。默认情况下，一个 Vue CLI 项目有三个模式：</p><ul><li>development 模式用于 vue-cli-service serve</li><li>test 模式用于 vue-cli-service test:unit</li><li>production 模式用于 vue-cli-service build 和 vue-cli-service test:e2e</li></ul><p>你可以通过传递 --mode 选项参数为命令行覆写默认的模式。</p><p>当运行 <code>vue-cli-service</code> 命令时，所有的环境变量都从对应的环境文件中载入。如果文件内部不包含 <code>NODE_ENV</code> 变量，它的值将取决于模式，例如，在 <code>production</code> 模式下被设置为 &quot;production&quot;，在 <code>test</code> 模式下被设置为 &quot;test&quot;，默认则是 &quot;development&quot;。</p><p><code>NODE_ENV</code> 将决定您的应用运行的模式，是开发，生产还是测试，因此也决定了创建哪种 webpack 配置。</p><p>例如通过将 <code>NODE_ENV</code> 设置为 &quot;test&quot;，Vue CLI 会创建一个优化过后的，并且旨在用于单元测试的 webpack 配置，它并不会处理图片以及一些对单元测试非必需的其他资源。</p><p>同理，<code>NODE_ENV=development</code> 创建一个 webpack 配置，该配置启用热更新，不会对资源进行 hash 也不会打出 vendor bundles，目的是为了在开发的时候能够快速重新构建。</p><p>当你运行 <code>vue-cli-service build</code> 命令时，无论你要部署到哪个环境，应该始终把 <code>NODE_ENV</code> 设置为 &quot;production&quot; 来获取可用于部署的应用程序。</p><h2 id="示例配置" tabindex="-1"><a class="header-anchor" href="#示例配置" aria-hidden="true">#</a> 示例配置</h2><p>我们现在有三个配置文件，分别如下</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment">#.env.development</span>\n<span class="token assign-left variable">NODE_ENV</span><span class="token operator">=</span>development\n<span class="token assign-left variable">VUE_APP_AXIOS_BASEURL</span><span class="token operator">=</span>http://xxxx\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment">#.env.preview 测试环境的配置</span>\n<span class="token assign-left variable">NODE_ENV</span><span class="token operator">=</span>production\n<span class="token assign-left variable">VUE_APP_AXIOS_BASEURL</span><span class="token operator">=</span>http://xxxx\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment">#.env.production</span>\n<span class="token assign-left variable">NODE_ENV</span><span class="token operator">=</span>production\n<span class="token assign-left variable">VUE_APP_AXIOS_BASEURL</span><span class="token operator">=</span>http://xxxx\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="在-axios-中使用" tabindex="-1"><a class="header-anchor" href="#在-axios-中使用" aria-hidden="true">#</a> 在 axios 中使用</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> axios <span class="token keyword">from</span> <span class="token string">&quot;axios&quot;</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> conf <span class="token operator">=</span> <span class="token punctuation">{</span>\n  baseURL<span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">VUE_APP_AXIOS_BASEURL</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token keyword">return</span> axios<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>conf<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="package-json-配置" tabindex="-1"><a class="header-anchor" href="#package-json-配置" aria-hidden="true">#</a> package.json 配置</h2><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token property">&quot;serve&quot;</span><span class="token operator">:</span> <span class="token string">&quot;vue-cli-service serve&quot;</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;build&quot;</span><span class="token operator">:</span> <span class="token string">&quot;vue-cli-service build --mode preview&quot;</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;build:release&quot;</span><span class="token operator">:</span> <span class="token string">&quot;vue-cli-service build&quot;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="启动方式" tabindex="-1"><a class="header-anchor" href="#启动方式" aria-hidden="true">#</a> 启动方式</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">npm</span> run serve <span class="token comment"># 默认 dev</span>\n<span class="token function">npm</span> run build <span class="token comment"># 测试环境</span>\n<span class="token function">npm</span> run build:release <span class="token comment"># 正式环境</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>',25),p={render:function(s,n){return a}}},5213:(s,n,e)=>{e.r(n),e.d(n,{data:()=>a});const a={key:"v-4ee71024",path:"/vue/env.html",title:"vue-cli env 配置",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"前言",slug:"前言",children:[]},{level:2,title:"简介-官方",slug:"简介-官方",children:[]},{level:2,title:"示例配置",slug:"示例配置",children:[]},{level:2,title:"在 axios 中使用",slug:"在-axios-中使用",children:[]},{level:2,title:"package.json 配置",slug:"package-json-配置",children:[]},{level:2,title:"启动方式",slug:"启动方式",children:[]}],filePathRelative:"vue/env.md",git:{updatedTime:1634016875e3}}}}]);