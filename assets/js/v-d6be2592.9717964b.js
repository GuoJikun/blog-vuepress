"use strict";(self.webpackChunkblogs_express=self.webpackChunkblogs_express||[]).push([[8004],{476:(n,e,s)=>{s.r(e),s.d(e,{default:()=>o});const a=(0,s(273).uE)('<h1>encodeURI 和 encodeURIComponent 的区别</h1><p><code>encodeURI()</code>和 <code>encodeURIComponent()</code>方法都可以对 URI 进行编码，以便发送给浏览器。有效的 URI 中不能包含某些字符，例如空格。而这 URI 编码方法就可以对 URI 进行编码，它们用特殊的 UTF-8 编码替换所有无效的字 符，从而让浏览器能够接受和理解。</p><blockquote><p><code>encodeURI()</code>不会对本身属于 URI 的特殊字符进行编码，例如冒号、正斜杠、问号和井字号；而 <code>encodeURIComponent()</code>则会对它发现的任何非标准字符进行编码</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> url <span class="token operator">=</span> <span class="token string">&#39;https://www.baidu.com?wd=ab c&#39;</span>\n<span class="token function">encodeURI</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span> <span class="token comment">// &quot;https://www.baidu.com?wd=ab%20c&quot;</span>\n<span class="token function">encodeURIComponent</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span> <span class="token comment">// https%3A%2F%2Fwww.baidu.com%3Fwd%3Dab%20c&quot;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>',4),o={render:function(n,e){return a}}},4723:(n,e,s)=>{s.r(e),s.d(e,{data:()=>a});const a={key:"v-d6be2592",path:"/basic/js/encode.html",title:"encodeURI 和 encodeURIComponent 的区别",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[],filePathRelative:"basic/js/encode.md",git:{updatedTime:1634016875e3}}}}]);