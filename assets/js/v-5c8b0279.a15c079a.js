"use strict";(self.webpackChunkblogs_express=self.webpackChunkblogs_express||[]).push([[7300],{3609:(n,s,a)=>{a.r(s),a.d(s,{default:()=>e});const p=(0,a(273).uE)('<h1>SCSS 之 mixin 和 extend</h1><h2 id="变量" tabindex="-1"><a class="header-anchor" href="#变量" aria-hidden="true">#</a> 变量</h2><h3 id="定义变量" tabindex="-1"><a class="header-anchor" href="#定义变量" aria-hidden="true">#</a> 定义变量</h3><div class="language-scss ext-scss line-numbers-mode"><pre class="language-scss"><code><span class="token property"><span class="token variable">$color-white</span></span><span class="token punctuation">:</span> white<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="使用变量" tabindex="-1"><a class="header-anchor" href="#使用变量" aria-hidden="true">#</a> 使用变量</h3><div class="language-scss ext-scss line-numbers-mode"><pre class="language-scss"><code><span class="token selector">body </span><span class="token punctuation">{</span>\n  <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token variable">$color-white</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="mixin-与-include" tabindex="-1"><a class="header-anchor" href="#mixin-与-include" aria-hidden="true">#</a> @mixin 与 @include</h2><h3 id="定义-mixin" tabindex="-1"><a class="header-anchor" href="#定义-mixin" aria-hidden="true">#</a> 定义 mixin</h3><div class="language-scss ext-scss line-numbers-mode"><pre class="language-scss"><code><span class="token comment">/*声明mixins*/</span>\n<span class="token atrule"><span class="token rule">@mixins</span> border</span> <span class="token punctuation">{</span>\n  <span class="token property">border</span><span class="token punctuation">:</span> 1px solid #red<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="使用-mixin" tabindex="-1"><a class="header-anchor" href="#使用-mixin" aria-hidden="true">#</a> 使用 mixin</h3><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code><span class="token comment">/*使用mixins*/</span>\n<span class="token selector">.my-div</span> <span class="token punctuation">{</span>\n  <span class="token atrule"><span class="token rule">@include</span> border<span class="token punctuation">;</span></span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="向-mixin-传递变量" tabindex="-1"><a class="header-anchor" href="#向-mixin-传递变量" aria-hidden="true">#</a> 向 mixin 传递变量</h3><p>混入可以接收参数。 我们可以向混入传递变量。 定义可以接收参数的混入：</p><div class="language-scss ext-scss line-numbers-mode"><pre class="language-scss"><code><span class="token comment">/* 混入接收两个参数 */</span>\n<span class="token keyword">@mixin</span> <span class="token function">bordered</span><span class="token punctuation">(</span><span class="token variable">$color</span><span class="token punctuation">,</span> <span class="token variable">$width</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token property">border</span><span class="token punctuation">:</span> <span class="token variable">$width</span> solid <span class="token variable">$color</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token selector">.myArticle </span><span class="token punctuation">{</span>\n  <span class="token keyword">@include</span> <span class="token function">bordered</span><span class="token punctuation">(</span>blue<span class="token punctuation">,</span> 1px<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 调用混入，并传递两个参数</span>\n<span class="token punctuation">}</span>\n<span class="token selector">.myNotes </span><span class="token punctuation">{</span>\n  <span class="token keyword">@include</span> <span class="token function">bordered</span><span class="token punctuation">(</span>red<span class="token punctuation">,</span> 2px<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 调用混入，并传递两个参数</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>以上实例的混入参数为设置边框的属性 (color 和 width) 。 将以上代码转换为 CSS 代码，如下所示：</p><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code><span class="token selector">.myArticle</span> <span class="token punctuation">{</span>\n  <span class="token property">border</span><span class="token punctuation">:</span> 1px solid blue<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token selector">.myNotes</span> <span class="token punctuation">{</span>\n  <span class="token property">border</span><span class="token punctuation">:</span> 2px solid red<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="可变参数" tabindex="-1"><a class="header-anchor" href="#可变参数" aria-hidden="true">#</a> 可变参数</h3><p>有时，不能确定一个混入（mixin）或者一个函数（function）使用多少个参数，这时我们就可以使用 ... 来设置可变参数。 例如，用于创建盒子阴影（box-shadow）的一个混入（mixin）可以采取任何数量的 box-shadow 作为参数。</p><div class="language-scss ext-scss line-numbers-mode"><pre class="language-scss"><code><span class="token keyword">@mixin</span> <span class="token function">box-shadow</span><span class="token punctuation">(</span><span class="token variable">$shadows</span>...<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token property">-moz-box-shadow</span><span class="token punctuation">:</span> <span class="token variable">$shadows</span><span class="token punctuation">;</span>\n  <span class="token property">-webkit-box-shadow</span><span class="token punctuation">:</span> <span class="token variable">$shadows</span><span class="token punctuation">;</span>\n  <span class="token property">box-shadow</span><span class="token punctuation">:</span> <span class="token variable">$shadows</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token selector">.shadows </span><span class="token punctuation">{</span>\n  <span class="token keyword">@include</span> <span class="token function">box-shadow</span><span class="token punctuation">(</span>0px 4px 5px #666<span class="token punctuation">,</span> 2px 6px 10px #999<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>编译后的 css 代码</p><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code><span class="token selector">.shadows</span> <span class="token punctuation">{</span>\n  <span class="token property">-moz-box-shadow</span><span class="token punctuation">:</span> 0px 4px 5px #666<span class="token punctuation">,</span> 2px 6px 10px #999<span class="token punctuation">;</span>\n  <span class="token property">-webkit-box-shadow</span><span class="token punctuation">:</span> 0px 4px 5px #666<span class="token punctuation">,</span> 2px 6px 10px #999<span class="token punctuation">;</span>\n  <span class="token property">box-shadow</span><span class="token punctuation">:</span> 0px 4px 5px #666<span class="token punctuation">,</span> 2px 6px 10px #999<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="extend-与-继承" tabindex="-1"><a class="header-anchor" href="#extend-与-继承" aria-hidden="true">#</a> @extend 与 继承</h2><p><code>@extend</code> 指令告诉 <code>Sass</code> 一个选择器的样式从另一选择器继承。 如果一个样式与另外一个样式几乎相同，只有少量的区别，则使用 <code>@extend</code> 就显得很有用。</p><div class="language-scss ext-scss line-numbers-mode"><pre class="language-scss"><code><span class="token selector">.button-basic </span><span class="token punctuation">{</span>\n  <span class="token property">border</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>\n  <span class="token property">padding</span><span class="token punctuation">:</span> 15px 30px<span class="token punctuation">;</span>\n  <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>\n  <span class="token property">font-size</span><span class="token punctuation">:</span> 16px<span class="token punctuation">;</span>\n  <span class="token property">cursor</span><span class="token punctuation">:</span> pointer<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token selector">.button-report </span><span class="token punctuation">{</span>\n  <span class="token keyword">@extend</span> .button-basic<span class="token punctuation">;</span>\n  <span class="token property">background-color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token selector">.button-submit </span><span class="token punctuation">{</span>\n  <span class="token keyword">@extend</span> .button-basic<span class="token punctuation">;</span>\n  <span class="token property">background-color</span><span class="token punctuation">:</span> green<span class="token punctuation">;</span>\n  <span class="token property">color</span><span class="token punctuation">:</span> white<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p>编译后的 css 代码</p><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code><span class="token selector">.button-basic,\n.button-report,\n.button-submit</span> <span class="token punctuation">{</span>\n  <span class="token property">border</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>\n  <span class="token property">padding</span><span class="token punctuation">:</span> 15px 30px<span class="token punctuation">;</span>\n  <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>\n  <span class="token property">font-size</span><span class="token punctuation">:</span> 16px<span class="token punctuation">;</span>\n  <span class="token property">cursor</span><span class="token punctuation">:</span> pointer<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token selector">.button-report</span> <span class="token punctuation">{</span>\n  <span class="token property">background-color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token selector">.button-submit</span> <span class="token punctuation">{</span>\n  <span class="token property">background-color</span><span class="token punctuation">:</span> green<span class="token punctuation">;</span>\n  <span class="token property">color</span><span class="token punctuation">:</span> white<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p>使用 <code>@extend</code> 后，我们在 HTML 按钮标签中就不需要指定多个类 <code>class=&quot;button-basic button-report&quot;</code> ，只需要设置 <code>class=&quot;button-report&quot;</code> 类就好了。 <code>@extend</code> 很好的体现了代码的复用。</p>',27),e={render:function(n,s){return p}}},3505:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p={key:"v-5c8b0279",path:"/basic/p2021091401.html",title:"SCSS 之 mixin 和 extend",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"变量",slug:"变量",children:[{level:3,title:"定义变量",slug:"定义变量",children:[]},{level:3,title:"使用变量",slug:"使用变量",children:[]}]},{level:2,title:"@mixin 与 @include",slug:"mixin-与-include",children:[{level:3,title:"定义 mixin",slug:"定义-mixin",children:[]},{level:3,title:"使用 mixin",slug:"使用-mixin",children:[]},{level:3,title:"向 mixin 传递变量",slug:"向-mixin-传递变量",children:[]},{level:3,title:"可变参数",slug:"可变参数",children:[]}]},{level:2,title:"@extend 与 继承",slug:"extend-与-继承",children:[]}],filePathRelative:"basic/p2021091401.md",git:{updatedTime:1634016875e3}}}}]);