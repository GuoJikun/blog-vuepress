"use strict";(self.webpackChunkblogs_gjk=self.webpackChunkblogs_gjk||[]).push([[226],{3267:(n,s,a)=>{a.r(s),a.d(s,{default:()=>l});var p=a(6252);const t=(0,p.uE)('<h1 id="cookie-封装" tabindex="-1"><a class="header-anchor" href="#cookie-封装" aria-hidden="true">#</a> Cookie 封装</h1><h2 id="新增" tabindex="-1"><a class="header-anchor" href="#新增" aria-hidden="true">#</a> 新增</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">setItem</span><span class="token punctuation">(</span><span class="token parameter">sKey<span class="token punctuation">,</span> sValue<span class="token punctuation">,</span> vEnd<span class="token punctuation">,</span> sPath<span class="token punctuation">,</span> sDomain<span class="token punctuation">,</span> bSecure</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>sKey <span class="token operator">||</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^(?:expires|max\\-age|path|domain|secure)$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>sKey<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  <span class="token keyword">let</span> sExpires <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>vEnd<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">switch</span> <span class="token punctuation">(</span>vEnd<span class="token punctuation">.</span>constructor<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">case</span> Number<span class="token operator">:</span>\n        sExpires <span class="token operator">=</span>\n          vEnd <span class="token operator">===</span> <span class="token number">Infinity</span>\n            <span class="token operator">?</span> <span class="token string">&quot;; expires=Fri, 31 Dec 9999 23:59:59 GMT&quot;</span>\n            <span class="token operator">:</span> <span class="token string">&quot;; max-age=&quot;</span> <span class="token operator">+</span> vEnd<span class="token punctuation">;</span>\n        <span class="token keyword">break</span><span class="token punctuation">;</span>\n      <span class="token keyword">case</span> String<span class="token operator">:</span>\n        sExpires <span class="token operator">=</span> <span class="token string">&quot;; expires=&quot;</span> <span class="token operator">+</span> vEnd<span class="token punctuation">;</span>\n        <span class="token keyword">break</span><span class="token punctuation">;</span>\n      <span class="token keyword">case</span> Date<span class="token operator">:</span>\n        sExpires <span class="token operator">=</span> <span class="token string">&quot;; expires=&quot;</span> <span class="token operator">+</span> vEnd<span class="token punctuation">.</span><span class="token function">toUTCString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">break</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n  document<span class="token punctuation">.</span>cookie <span class="token operator">=</span>\n    <span class="token function">encodeURIComponent</span><span class="token punctuation">(</span>sKey<span class="token punctuation">)</span> <span class="token operator">+</span>\n    <span class="token string">&quot;=&quot;</span> <span class="token operator">+</span>\n    <span class="token function">encodeURIComponent</span><span class="token punctuation">(</span>sValue<span class="token punctuation">)</span> <span class="token operator">+</span>\n    sExpires <span class="token operator">+</span>\n    <span class="token punctuation">(</span>sDomain <span class="token operator">?</span> <span class="token string">&quot;; domain=&quot;</span> <span class="token operator">+</span> sDomain <span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span> <span class="token operator">+</span>\n    <span class="token punctuation">(</span>sPath <span class="token operator">?</span> <span class="token string">&quot;; path=&quot;</span> <span class="token operator">+</span> sPath <span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span> <span class="token operator">+</span>\n    <span class="token punctuation">(</span>bSecure <span class="token operator">?</span> <span class="token string">&quot;; secure&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br></div></div><h2 id="判断-cookie-是否存在" tabindex="-1"><a class="header-anchor" href="#判断-cookie-是否存在" aria-hidden="true">#</a> 判断 cookie 是否存在</h2><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">hasItem</span><span class="token punctuation">(</span><span class="token parameter">sKey</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span>\n    <span class="token string">&quot;(?:^|;\\\\s*)&quot;</span> <span class="token operator">+</span>\n      <span class="token function">encodeURIComponent</span><span class="token punctuation">(</span>sKey<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[-.+*]</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&quot;\\\\$&amp;&quot;</span><span class="token punctuation">)</span> <span class="token operator">+</span>\n      <span class="token string">&quot;\\\\s*\\\\=&quot;</span>\n  <span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span>cookie<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre></div><h2 id="删除" tabindex="-1"><a class="header-anchor" href="#删除" aria-hidden="true">#</a> 删除</h2><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">removeItem</span><span class="token punctuation">(</span><span class="token parameter">sKey<span class="token punctuation">,</span> sPath<span class="token punctuation">,</span> sDomain</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>sKey <span class="token operator">||</span> <span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">hasItem</span><span class="token punctuation">(</span>sKey<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  document<span class="token punctuation">.</span>cookie <span class="token operator">=</span>\n    <span class="token function">encodeURIComponent</span><span class="token punctuation">(</span>sKey<span class="token punctuation">)</span> <span class="token operator">+</span>\n    <span class="token string">&quot;=; expires=Thu, 01 Jan 1970 00:00:00 GMT&quot;</span> <span class="token operator">+</span>\n    <span class="token punctuation">(</span>sDomain <span class="token operator">?</span> <span class="token string">&quot;; domain=&quot;</span> <span class="token operator">+</span> sDomain <span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span> <span class="token operator">+</span>\n    <span class="token punctuation">(</span>sPath <span class="token operator">?</span> <span class="token string">&quot;; path=&quot;</span> <span class="token operator">+</span> sPath <span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre></div><h2 id="获取-cookie-的-key-的集合" tabindex="-1"><a class="header-anchor" href="#获取-cookie-的-key-的集合" aria-hidden="true">#</a> 获取 cookie 的 key 的集合</h2><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">keys</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">let</span> aKeys <span class="token operator">=</span> document<span class="token punctuation">.</span>cookie\n    <span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">((?:^|\\s*;)[^\\=]+)(?=;|$)|^\\s*|\\s*(?:\\=[^;]*)?(?:\\1|$)</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\s*(?:\\=[^;]*)?;\\s*</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> nIdx <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> nIdx <span class="token operator">&lt;</span> aKeys<span class="token punctuation">.</span>length<span class="token punctuation">;</span> nIdx<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    aKeys<span class="token punctuation">[</span>nIdx<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">decodeURIComponent</span><span class="token punctuation">(</span>aKeys<span class="token punctuation">[</span>nIdx<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  <span class="token keyword">return</span> aKeys<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre></div>',9),e=(0,p.Uk)("cookie 相关的函数来源于 "),o={href:"https://developer.mozilla.org/zh-CN/docs/Web/API/Document/cookie#%E4%B8%80%E4%B8%AA%E5%B0%8F%E6%A1%86%E6%9E%B6%EF%BC%9A%E4%B8%80%E4%B8%AA%E5%AE%8C%E6%95%B4%E6%94%AF%E6%8C%81unicode%E7%9A%84cookie%E8%AF%BB%E5%8F%96%E5%86%99%E5%85%A5%E5%99%A8",target:"_blank",rel:"noopener noreferrer"},c=(0,p.Uk)("MDN"),l={render:function(n,s){const a=(0,p.up)("OutboundLink");return(0,p.wg)(),(0,p.j4)(p.HY,null,[t,(0,p.Wm)("blockquote",null,[(0,p.Wm)("p",null,[e,(0,p.Wm)("a",o,[c,(0,p.Wm)(a)])])])],64)}}},1457:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p={key:"v-316daebb",path:"/basic/cookie.html",title:"Cookie 封装",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"新增",slug:"新增",children:[]},{level:2,title:"判断 cookie 是否存在",slug:"判断-cookie-是否存在",children:[]},{level:2,title:"删除",slug:"删除",children:[]},{level:2,title:"获取 cookie 的 key 的集合",slug:"获取-cookie-的-key-的集合",children:[]}],filePathRelative:"basic/cookie.md",git:{}}}}]);