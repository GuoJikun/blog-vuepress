"use strict";(self.webpackChunkblogs_gjk=self.webpackChunkblogs_gjk||[]).push([[84],{5879:(e,n,o)=>{o.r(n),o.d(n,{default:()=>c});const a=(0,o(6252).uE)('<h1 id="encodeuri-和-encodeuricomponent-的区别" tabindex="-1"><a class="header-anchor" href="#encodeuri-和-encodeuricomponent-的区别" aria-hidden="true">#</a> encodeURI 和 encodeURIComponent 的区别</h1><p><code>encodeURI()</code>和 <code>encodeURIComponent()</code>方法都可以对 URI 进行编码，以便发送给浏览器。有效的 URI 中不能包含某些字符，例如空格。而这 URI 编码方法就可以对 URI 进行编码，它们用特殊的 UTF-8 编码替换所有无效的字 符，从而让浏览器能够接受和理解。</p><blockquote><p><code>encodeURI()</code>不会对本身属于 URI 的特殊字符进行编码，例如冒号、正斜杠、问号和井字号；而 <code>encodeURIComponent()</code>则会对它发现的任何非标准字符进行编码</p></blockquote><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> url <span class="token operator">=</span> <span class="token string">&#39;https://www.baidu.com?wd=ab c&#39;</span>\n<span class="token function">encodeURI</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span> <span class="token comment">// &quot;https://www.baidu.com?wd=ab%20c&quot;</span>\n<span class="token function">encodeURIComponent</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span> <span class="token comment">// https%3A%2F%2Fwww.baidu.com%3Fwd%3Dab%20c&quot;</span>\n</code></pre></div>',4),c={render:function(e,n){return a}}},1432:(e,n,o)=>{o.r(n),o.d(n,{data:()=>a});const a={key:"v-0abdfa49",path:"/basic/encode.html",title:"encodeURI 和 encodeURIComponent 的区别",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[],filePathRelative:"basic/encode.md",git:{updatedTime:1628762435e3,contributors:[{name:"GuoJikun",email:"guojikun@y-open.com",commits:1}]}}}}]);